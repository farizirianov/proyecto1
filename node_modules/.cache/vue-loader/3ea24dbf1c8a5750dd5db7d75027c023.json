{"remainingRequest":"/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/src/components/Like/LikeList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/src/components/Like/LikeList.vue","mtime":1593720425938},{"path":"/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/node_modules/vuetify-loader/lib/loader.js","mtime":1574476662000},{"path":"/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/farialis/Development/lab3/ejemplo-vue/Pera/perita (copia1)/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCgppbXBvcnQgYXBpIGZyb20gJy4uLy4uL3NlcnZpY2VzL2FwaScKaW1wb3J0IHsgbWRpQ2xvc2VUaGljayB9IGZyb20gJ0BtZGkvanMnCgpleHBvcnQgZGVmYXVsdCB7CiAgcHJvcHM6IFsnaWQnXSwKICBkYXRhOiAoKSA9PiAoewogICAgZGlhbG9nOiBmYWxzZSwKICAgIHN2ZzogewogICAgICBjbG9zZTogbWRpQ2xvc2VUaGljawogICAgfSwKICAgIGxpa2U6IDEsCiAgICBsaWtlczogW10sCiAgICBsaWtlU2l6ZTogMQogIH0pLAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIG1vc3RyYXIoKSB7CiAgICAgIHRyeSB7CiAgICAgICAgY29uc3QgbGlrZSA9IGF3YWl0IGFwaS5nZXRBbGxMaWtlQnlQb3N0KHRoaXMuaWQpICAgICAgICAgIAogICAgICAgIHRoaXMubGlrZXMgPSBsaWtlLmRhdGEKICAgICAgICB0aGlzLmxpa2VTaXplID0gbGlrZS5kYXRhLmxlbmd0aAogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgIGNvbnNvbGUubG9nKGUpCiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["LikeList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"LikeList.vue","sourceRoot":"src/components/Like","sourcesContent":["<template>\n    <v-dialog v-model=\"dialog\">\n      <template v-slot:activator=\"{ on }\">\n        <v-btn\n          elevation=\"0\" \n          color=\"#2c003e\" text small\n          @click.stop=\"dialog = true\" \n          v-on=\"on\"\n          v-on:click=\"mostrar\"\n        >\n         Me Gusta\n        </v-btn>\n      </template>\n      <v-card class=\"rounded-lg\">\n        <v-card-title class=\"primario white--text\">\n          <v-row align=\"center\" class=\"spacer\" no-gutters>\n            <v-col>\n              Lista de Me Gusta\n            </v-col>\n            <v-col cols=\"1\">\n              <v-btn text small fab @click.stop=\"dialog = false\" height=\"24\" width=\"24\">\n                <v-icon color=\"white\">{{svg.close}}</v-icon>\n              </v-btn>\n            </v-col>\n          </v-row>\n        </v-card-title>\n        <v-divider></v-divider>\n          <v-list rounded>\n            <v-list-item-group v-model=\"likes\">\n              <v-list-item\n                v-for=\"(like, i) in likes\"\n                :key=\"i\"\n                link\n              >\n                <v-list-item-avatar>\n                  <v-img :src=\"like.idUser.image\"></v-img>\n                </v-list-item-avatar>\n                <v-list-item-content>\n                  <v-list-item-title>\n                    {{like.idUser.firstName}} {{like.idUser.lastName}}\n                  </v-list-item-title>\n                </v-list-item-content>\n              </v-list-item>\n            </v-list-item-group>\n          </v-list>\n      </v-card>\n    </v-dialog>\n</template>\n\n<script>\n\n  import api from '../../services/api'\n  import { mdiCloseThick } from '@mdi/js'\n\n  export default {\n    props: ['id'],\n    data: () => ({\n      dialog: false,\n      svg: {\n        close: mdiCloseThick\n      },\n      like: 1,\n      likes: [],\n      likeSize: 1\n    }),\n    methods: {\n      async mostrar() {\n        try {\n          const like = await api.getAllLikeByPost(this.id)          \n          this.likes = like.data\n          this.likeSize = like.data.length\n        } catch (e) {\n           console.log(e)\n        }\n      }\n    }\n  }\n</script>"]}]}